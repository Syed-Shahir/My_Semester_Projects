module rx (
  input        reset,
  input        rxclk,
  input        rx_enable,
  input        rx_in,
  input        uld_rx_data,
  output reg [7:0] rx_data,
  output reg   rx_empty
);
  reg [7:0] rx_reg;
  reg [3:0] rx_sample_cnt;
  reg [3:0] rx_cnt;
  reg       rx_busy;
  reg       rx_d1, rx_d2;

  always @ (posedge rxclk or posedge reset) begin
    if (reset) begin
      rx_reg        <= 0;
      rx_data       <= 0;
      rx_sample_cnt <= 0;
      rx_cnt        <= 0;
      rx_empty      <= 1;
      rx_d1         <= 1;
      rx_d2         <= 1;
      rx_busy       <= 0;
    end else begin
      rx_d1 <= rx_in;
      rx_d2 <= rx_d1;
      if (uld_rx_data) begin
        rx_data <= rx_reg;
        rx_empty <= 1;
      end
      if (rx_enable) begin
        if (!rx_busy && !rx_d2) begin
          rx_busy <= 1;
          rx_sample_cnt <= 1;
          rx_cnt <= 0;
        end
        if (rx_busy) begin
          rx_sample_cnt <= rx_sample_cnt + 1;
          if (rx_sample_cnt == 7) begin
            if ((rx_d2 == 1) && (rx_cnt == 0)) begin
              rx_busy <= 0;
            end else begin
              rx_cnt <= rx_cnt + 1;
              if (rx_cnt > 0 && rx_cnt < 9) rx_reg[rx_cnt - 1] <= rx_d2;
              if (rx_cnt == 9) begin
                rx_busy <= 0;
                rx_empty <= 0;
              end
            end
          end
        end
      end
      if (!rx_enable) rx_busy <= 0;
    end
  end
endmodule
